name: CI/CD Pipeline

on:
  push:
    branches:
      - main
env:
  SERVICE_NAME: hola-mundo
  REGION: ${{ secrets.GCP_REGION }}
  PROJECT: ${{ secrets.GCP_PROJECT_ID }}


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/newapp:v3 .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/newapp:v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
           credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Check if service exists and delete it
        run: |
          if gcloud run services describe "$SERVICE_NAME" --platform managed --region "$REGION" --project "$PROJECT" &>/dev/null; then
            echo "Service $SERVICE_NAME exists. Deleting..."
            gcloud run services delete "$SERVICE_NAME" --platform managed --region "$REGION" --project "$PROJECT" --quiet
            echo "Service deleted."
          else
            echo "Service $SERVICE_NAME does not exist. Proceeding with deployment."
          fi  
      
      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy "$SERVICE_NAME"  --image docker.io/${{ secrets.DOCKERHUB_USERNAME }}/newapp:v3 --platform managed --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }} --set-env-vars APP_VERSION=1.0.0 --allow-unauthenticated

      - name: Show URL
        run: |
          SERVICES_URL=$(gcloud run services describe "$SERVICE_NAME" --platform managed --region "$REGION" --project "$PROJECT" --format 'value(status.url)')
          echo "The URL is $SERVICES_URL"
      
